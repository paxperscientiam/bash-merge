#!/usr/bin/env bash
shopt -s nocasematch
shopt -s extglob
:
#set -x
declare ENTRY
declare TARGET

verifyPath() {

    # test if variable is zero length
    [[ -z "${!1}" ]] && \
        printf 'Path variable %s cannot be zero length!\n' "${1}" && exit 1

    local TMP_FILE; TMP_FILE="${!1}"
    local TMP_DIR; TMP_DIR="$(dirname "${!1}")"
    :
    local FILE
    local DIR
    :
    if [[ $1 == 'ENTRY' || $1 == 'TARGET' ]]
    then
        [[ ! "${!1}" = /* ]] && \
            printf '%s\n' "The ENTRY path must be absolute!" && exit 1
        DIR="${TMP_DIR}" FILE="${TMP_FILE}"
        :
        [[ ! -d $DIR ]] && \
            printf 'The base directory "%s" must exist!\n' "${DIR}" && exit 1
        :
        [[ ! -w $DIR ]] && \
            printf 'The base directory "%s" must be writable!\n' "${DIR}" && exit 1
        :
    fi

    [[ $1 == 'ENTRY' && ! -f $FILE ]] && printf 'The ENTRY file "%s" must exist!\n' "${FILE}" && exit 1

    [[ $1 == 'TARGET' && -d "${FILE}" ]] && TARGET="${FILE}/output.bash"

    [[ $1 == 'TARGET' && -f $FILE ]] && TARGET="${FILE%%+(/)}"

    return 0
}


case $1 in
    -h)
        cat <<'EOF'
Usage:
 <ENTRY=/path/to/parent-script> <TARGET=path/to/target-script> bash-merge

Example:
 ENTRY=${HOME}/top-secret/parent-script.bash TARGET=dist bash-merge
 => ${HOME}/top-secret/dist/parent-script

Note:
 The TARGET path is ALWAYS treated as relative to the ENTRY path!

EOF
        exit 0
        ;;
esac
:
printf '\n'
:
verifyPath ENTRY; printf 'ENTRY point: %s\n' "${ENTRY}"
:
TARGET="$(dirname "${ENTRY:?}")/${TARGET}"
:
verifyPath TARGET; printf 'TARGET point: %s\n' "${TARGET}"
:
ENTRY_DIR=$(dirname "${ENTRY}")
:
install -b -m 755 /dev/null "${TARGET}"
:
while read -ra words
do
    [[ ${words[*]} == '# ENDBUILD' ]] && break

    if [[ ${words[0]} == source ]]
    then
        eval cat "${ENTRY_DIR}/${words[1]}"
        printf '%s\n' $";"
    fi
done < "${ENTRY}" >| "${TARGET}"


printf 'Check "%s" for your output.\n' "$(dirname "${TARGET}")"
